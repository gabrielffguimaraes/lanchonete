<?php

class ProductController extends ProductDAO
{
    public function __construct()
    {
        $this->open();
        parent::__constructor(); // TODO: Change the autogenerated stub
    }

    public function list($req,$res)
    {
        $params = $req->getParams();
        $categories = $params['categories'] ?? "";
        $limit = $params['limit'] ?? 20;
        $offset = $params['offset'] ?? 0;
        $description = $params['description'] ?? "";

        $products = $this->getProducts("",$categories,$description,$limit,$offset);
        return $res->withJson($products,200);
    }
    public function listById($req,$res,$args,$api = true)
    {
        $id = $args['id'];
        $product = $this->getProducts($id);
        if(!$api) {
            return $product["data"];
        }
        if(!empty($product["data"])) {
            return $res->withJson($product["data"][0],200);
        } else {
            return $res->withJson("Produto não encontrado",404);
        }
    }
    public function addIngredientToProduct($req,$res)
    {
        $ingredientDAO = new IngredientDAO();
        $productDAO = new ProductDAO();
        $productDAO->connection = $this->connection;
        $ingredientDAO->connection = $this->connection;

        $args = $req->getParsedBody();

        $ingredient = $ingredientDAO->getIngredients($args['ingredient_id']);

        $product = $productDAO->getProducts($args['product_id']);
        $exist = $productDAO->existIngredientProduct($args['ingredient_id'],$args['product_id']);

        if (empty($ingredient)) {
            return $res->withJson("Ingrediente não encontrado",404);
        } else if (empty($product)) {
            return $res->withJson("Produto não encontrado",404);
        } else if(!empty($exist)) {
            return $res->withJson("Ingrediente já adicionado ao produto .",400);
        }

        $added = $productDAO->addIngredientToProduct($args['product_id'],$args['ingredient_id']);

        if($added != 1) {
            return $res->withJson("Erro , por favor tentar novamente mais tarde .",400);
        } else {
            return $res->withJson("Sucesso , ingrediente adicionado com sucesso .",200);
        }
        return $res->withJson($msg,$status);
    }
    public function add($req,$res)
    {
        $categoryDAO = new CategoryDAO();
        $categoryDAO->connection = $this->connection;
        $ingredientDAO = new IngredientDAO();
        $ingredientDAO->connection = $this->connection;

        $productDAO = new ProductDAO();
        $productDAO->connection = $this->connection;

        $args = $req->getParsedBody();

        $category = $categoryDAO->getCategories($args['category']);

        if (empty($category)) {
            return $res->withJson("Categoria não encontrada",404);
        }
        $product = array(
            "description" => $args['description'],
            "category" => $args['category'],
            "price" => $args['price']
        );
        $id = $productDAO->addProduct($product);
        if($id) {
            if (isset($args['ingredients'])) {
                foreach (explode(",", $args['ingredients']) as $ingredient) {
                    $newIngredient = array(
                        "description" => trim($ingredient)
                    );
                    $ingredients = $ingredientDAO->getIngredientByDescription($newIngredient);
                    $idIngredient = null;
                    if (empty($ingredients)) {
                        $idIngredient = $ingredientDAO->addIngredient($newIngredient);
                    } else {
                        $idIngredient = $ingredients[0]["id"];
                    }
                    $productDAO->addIngredientToProduct($id, $idIngredient);
                }
            }
            $directory =  __DIR__."/../uploads" ;
            $uploadedFiles = $req->getUploadedFiles();

            /* foto principal */
            $uploadedFile = $uploadedFiles['foto'];
            if ($uploadedFile->getError() === UPLOAD_ERR_OK) {
                $filename = Util::moveUploadedFile($directory, $uploadedFile);
                $productDAO->saveProductPhoto($id,$filename,"main");
            }

            /* galeria */
            foreach ($uploadedFiles['fotos'] as $uploadedFile) {
                if ($uploadedFile->getError() === UPLOAD_ERR_OK) {
                    $filename = Util::moveUploadedFile($directory, $uploadedFile);
                    $productDAO->saveProductPhoto($id,$filename);
                }
            }
        }
        if($id) {
            return $res->withJson("Sucesso, produto criado com sucesso .",201);
        } else {
            return $res->withJson("Erro ao criar produto .",400);
        }
    }

}
